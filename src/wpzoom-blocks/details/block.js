/**
 * BLOCK: block-details
 *
 * Registering a basic block with Gutenberg.
 * Simple block, renders and saves the same content without any interactivity.
 */

/* Internal dependencies */
import Detail from './components/Detail';
import legacy from "./legacy";
import Icons from "./utils/IconsArray";

/* External dependencies */
const { __ } = wp.i18n;
const { registerBlockType } = wp.blocks; // Import registerBlockType() from wp.blocks

// Create SVG icon for block
const el = wp.element.createElement;
const SVG = wp.components.SVG;
const path1 = el( 'path', { d: "M 10.960938 10.105469 C 10.960938 10.691406 10.488281 11.164062 9.902344 11.164062 C 9.316406 11.164062 8.839844 10.691406 8.839844 10.105469 C 8.839844 9.519531 9.316406 9.042969 9.902344 9.042969 C 10.488281 9.042969 10.960938 9.519531 10.960938 10.105469 Z M 10.960938 10.105469 " } );
const path2 = el( 'path', { d: "M 14.65625 4.851562 L 10.875 8.628906 C 11.074219 8.761719 11.246094 8.933594 11.375 9.132812 L 15.15625 5.355469 L 15.644531 4.863281 C 15.566406 4.773438 15.480469 4.691406 15.402344 4.605469 C 15.320312 4.519531 15.230469 4.4375 15.144531 4.359375 Z M 14.65625 4.851562 " } );
const path3 = el( 'path', { d: "M 10.875 11.578125 L 11.152344 11.855469 C 11.242188 11.945312 11.375 11.976562 11.496094 11.945312 C 11.617188 11.910156 11.714844 11.816406 11.746094 11.695312 C 11.777344 11.570312 11.742188 11.441406 11.652344 11.351562 L 11.375 11.078125 C 11.246094 11.277344 11.074219 11.445312 10.875 11.578125 Z M 10.875 11.578125 " } );
const path4 = el( 'path', { d: "M 19.769531 9.304688 L 19.746094 9.050781 C 19.734375 8.933594 19.71875 8.820312 19.703125 8.707031 C 19.699219 8.65625 19.691406 8.601562 19.679688 8.550781 C 19.660156 8.417969 19.636719 8.285156 19.609375 8.160156 C 19.605469 8.128906 19.597656 8.101562 19.589844 8.070312 C 19.5625 7.925781 19.527344 7.78125 19.492188 7.640625 C 19.492188 7.632812 19.488281 7.628906 19.488281 7.621094 C 19.253906 6.730469 18.898438 5.875 18.429688 5.078125 L 17.90625 5.601562 C 17.738281 5.769531 17.539062 5.902344 17.320312 5.992188 C 17.472656 6.265625 17.613281 6.546875 17.734375 6.835938 C 17.75 6.867188 17.757812 6.902344 17.773438 6.9375 C 17.816406 7.039062 17.855469 7.140625 17.890625 7.242188 C 17.914062 7.308594 17.933594 7.367188 17.953125 7.429688 C 17.980469 7.503906 18.003906 7.582031 18.027344 7.65625 C 18.054688 7.730469 18.070312 7.804688 18.09375 7.882812 C 18.109375 7.945312 18.128906 8.015625 18.140625 8.078125 C 18.164062 8.160156 18.179688 8.242188 18.199219 8.320312 C 18.210938 8.386719 18.226562 8.449219 18.238281 8.511719 C 18.25 8.59375 18.269531 8.675781 18.285156 8.761719 C 18.292969 8.828125 18.300781 8.898438 18.3125 8.964844 C 18.320312 9.042969 18.332031 9.121094 18.339844 9.203125 C 18.347656 9.285156 18.355469 9.367188 18.359375 9.453125 C 18.367188 9.515625 18.371094 9.585938 18.375 9.648438 C 18.386719 9.800781 18.390625 9.953125 18.390625 10.105469 C 18.390625 10.597656 18.34375 11.085938 18.257812 11.570312 C 18.257812 11.574219 18.261719 11.574219 18.261719 11.574219 C 18.261719 11.578125 18.257812 11.578125 18.257812 11.578125 L 18.257812 11.585938 C 18.085938 12.550781 17.75 13.480469 17.257812 14.328125 C 17.257812 14.335938 17.257812 14.339844 17.253906 14.347656 C 17.246094 14.355469 17.242188 14.367188 17.234375 14.371094 C 16.742188 15.210938 16.117188 15.957031 15.375 16.582031 C 15.371094 16.589844 15.367188 16.601562 15.359375 16.609375 C 15.351562 16.613281 15.339844 16.613281 15.332031 16.617188 C 12.191406 19.25 7.613281 19.25 4.46875 16.617188 C 4.464844 16.613281 4.453125 16.613281 4.445312 16.609375 C 4.4375 16.605469 4.433594 16.589844 4.425781 16.582031 C 3.6875 15.957031 3.0625 15.210938 2.570312 14.371094 C 2.5625 14.367188 2.554688 14.355469 2.550781 14.347656 C 2.546875 14.339844 2.546875 14.335938 2.546875 14.328125 C 2.054688 13.480469 1.714844 12.550781 1.546875 11.585938 L 1.546875 11.578125 C 1.542969 11.578125 1.542969 11.578125 1.542969 11.574219 C 1.542969 11.574219 1.542969 11.574219 1.546875 11.570312 C 1.457031 11.085938 1.414062 10.597656 1.414062 10.105469 C 1.414062 9.953125 1.417969 9.800781 1.429688 9.648438 C 1.433594 9.578125 1.4375 9.507812 1.441406 9.4375 C 1.449219 9.359375 1.453125 9.28125 1.464844 9.207031 C 1.472656 9.117188 1.484375 9.027344 1.496094 8.941406 C 1.503906 8.882812 1.511719 8.828125 1.519531 8.769531 C 1.535156 8.675781 1.550781 8.582031 1.570312 8.484375 C 1.582031 8.4375 1.589844 8.390625 1.601562 8.339844 C 1.621094 8.246094 1.644531 8.148438 1.664062 8.054688 C 1.679688 8.003906 1.691406 7.957031 1.703125 7.910156 C 1.730469 7.820312 1.753906 7.726562 1.78125 7.636719 C 1.800781 7.582031 1.816406 7.53125 1.832031 7.476562 C 1.859375 7.390625 1.886719 7.308594 1.917969 7.226562 C 1.945312 7.152344 1.972656 7.082031 2 7.011719 C 2.027344 6.945312 2.046875 6.886719 2.074219 6.824219 C 2.132812 6.683594 2.195312 6.550781 2.261719 6.414062 C 2.429688 6.070312 2.621094 5.738281 2.828125 5.417969 C 2.351562 5.339844 1.910156 5.113281 1.566406 4.769531 C 1.007812 5.640625 0.589844 6.59375 0.324219 7.59375 C 0.316406 7.613281 0.3125 7.636719 0.308594 7.65625 C 0.273438 7.789062 0.242188 7.921875 0.214844 8.058594 C 0.207031 8.09375 0.199219 8.132812 0.191406 8.171875 C 0.167969 8.296875 0.144531 8.421875 0.125 8.542969 C 0.113281 8.601562 0.105469 8.660156 0.0976562 8.722656 C 0.0859375 8.828125 0.0664062 8.9375 0.0546875 9.046875 L 0.0351562 9.3125 L 0.015625 9.566406 C 0.0078125 9.742188 0 9.925781 0 10.105469 C 0 15.574219 4.433594 20.007812 9.902344 20.007812 C 15.371094 20.007812 19.804688 15.574219 19.804688 10.105469 C 19.804688 9.925781 19.796875 9.742188 19.789062 9.566406 C 19.78125 9.476562 19.777344 9.394531 19.769531 9.304688 Z M 19.769531 9.304688 " } );
const path5 = el( 'path', { d: "M 13.886719 3.425781 C 13.691406 3.308594 13.492188 3.199219 13.285156 3.097656 L 13.28125 3.097656 C 13.15625 3.039062 13.027344 2.980469 12.898438 2.925781 L 12.894531 2.921875 L 12.652344 3.578125 C 12.609375 3.699219 12.507812 3.785156 12.382812 3.804688 C 12.257812 3.828125 12.128906 3.78125 12.050781 3.683594 C 11.96875 3.585938 11.945312 3.453125 11.988281 3.335938 L 12.230469 2.679688 C 12.199219 2.675781 12.175781 2.664062 12.148438 2.65625 C 12.078125 2.636719 12.007812 2.613281 11.933594 2.597656 C 11.875 2.578125 11.820312 2.566406 11.761719 2.550781 C 11.6875 2.53125 11.609375 2.515625 11.53125 2.496094 L 11.367188 2.464844 C 11.289062 2.449219 11.210938 2.433594 11.132812 2.421875 C 11.074219 2.414062 11.011719 2.40625 10.949219 2.398438 C 10.878906 2.386719 10.804688 2.378906 10.730469 2.371094 C 10.65625 2.363281 10.574219 2.355469 10.496094 2.347656 C 10.4375 2.34375 10.378906 2.339844 10.320312 2.335938 L 10.253906 2.335938 L 10.253906 3.03125 C 10.253906 3.226562 10.097656 3.386719 9.902344 3.386719 C 9.707031 3.386719 9.546875 3.226562 9.546875 3.03125 L 9.546875 2.335938 L 9.484375 2.335938 C 9.421875 2.339844 9.355469 2.34375 9.289062 2.347656 C 9.21875 2.355469 9.148438 2.359375 9.078125 2.367188 L 8.832031 2.398438 L 8.679688 2.417969 C 8.589844 2.433594 8.503906 2.453125 8.421875 2.46875 C 8.375 2.476562 8.328125 2.484375 8.285156 2.492188 C 8.199219 2.511719 8.109375 2.53125 8.019531 2.554688 C 7.976562 2.566406 7.9375 2.578125 7.890625 2.589844 C 7.808594 2.609375 7.722656 2.636719 7.636719 2.660156 L 7.574219 2.679688 L 7.816406 3.335938 C 7.859375 3.453125 7.835938 3.585938 7.753906 3.683594 C 7.671875 3.78125 7.546875 3.828125 7.421875 3.804688 C 7.296875 3.785156 7.195312 3.699219 7.152344 3.578125 L 6.910156 2.921875 C 6.90625 2.925781 6.902344 2.925781 6.894531 2.929688 C 6.773438 2.980469 6.644531 3.039062 6.519531 3.097656 C 6.058594 3.324219 5.617188 3.597656 5.207031 3.910156 L 9.65625 8.359375 C 9.738281 8.347656 9.820312 8.339844 9.902344 8.335938 C 9.984375 8.339844 10.066406 8.347656 10.144531 8.359375 L 14.597656 3.910156 C 14.371094 3.734375 14.132812 3.574219 13.886719 3.425781 Z M 13.886719 3.425781 " } );
const path6 = el( 'path', { d: "M 4.875 4.582031 C 4.808594 4.675781 4.734375 4.769531 4.652344 4.851562 C 4.566406 4.9375 4.472656 5.011719 4.375 5.078125 L 8.425781 9.132812 C 8.558594 8.933594 8.730469 8.761719 8.929688 8.628906 Z M 4.875 4.582031 " } );
const path7 = el( 'path', { d: "M 12.382812 0.515625 C 12.378906 0.515625 12.375 0.511719 12.371094 0.511719 C 12.226562 0.476562 12.082031 0.441406 11.933594 0.410156 C 11.90625 0.40625 11.878906 0.402344 11.851562 0.398438 C 11.71875 0.367188 11.589844 0.347656 11.453125 0.328125 C 11.40625 0.316406 11.351562 0.3125 11.300781 0.304688 C 11.1875 0.289062 11.074219 0.273438 10.957031 0.257812 L 10.703125 0.238281 L 10.4375 0.214844 C 10.257812 0.210938 10.082031 0.203125 9.902344 0.203125 C 9.722656 0.203125 9.542969 0.210938 9.363281 0.214844 L 9.109375 0.238281 L 8.84375 0.257812 C 8.734375 0.269531 8.625 0.289062 8.515625 0.300781 C 8.460938 0.308594 8.398438 0.316406 8.34375 0.328125 C 8.21875 0.347656 8.09375 0.367188 7.972656 0.394531 L 7.855469 0.414062 C 7.71875 0.445312 7.585938 0.476562 7.453125 0.511719 C 7.433594 0.511719 7.414062 0.519531 7.390625 0.523438 C 6.390625 0.789062 5.4375 1.210938 4.566406 1.769531 C 4.910156 2.113281 5.136719 2.554688 5.214844 3.03125 C 5.535156 2.820312 5.867188 2.632812 6.210938 2.460938 L 6.214844 2.460938 C 6.347656 2.394531 6.480469 2.335938 6.621094 2.277344 C 6.683594 2.25 6.742188 2.230469 6.804688 2.203125 C 6.878906 2.175781 6.953125 2.148438 7.023438 2.121094 C 7.105469 2.089844 7.1875 2.0625 7.269531 2.039062 C 7.324219 2.019531 7.378906 2.003906 7.433594 1.984375 C 7.527344 1.957031 7.613281 1.933594 7.707031 1.90625 C 7.753906 1.894531 7.804688 1.882812 7.855469 1.867188 C 7.945312 1.84375 8.042969 1.820312 8.132812 1.804688 L 8.289062 1.773438 C 8.382812 1.753906 8.472656 1.738281 8.566406 1.722656 C 8.625 1.710938 8.683594 1.707031 8.742188 1.699219 C 8.832031 1.6875 8.914062 1.671875 9 1.667969 C 9.085938 1.660156 9.160156 1.652344 9.238281 1.644531 C 9.308594 1.640625 9.375 1.632812 9.445312 1.632812 C 9.597656 1.621094 9.75 1.617188 9.902344 1.617188 C 10.054688 1.617188 10.207031 1.621094 10.359375 1.632812 C 10.425781 1.632812 10.488281 1.636719 10.554688 1.644531 C 10.636719 1.652344 10.722656 1.65625 10.804688 1.667969 C 10.886719 1.675781 10.964844 1.683594 11.042969 1.695312 C 11.113281 1.707031 11.179688 1.710938 11.246094 1.722656 C 11.332031 1.738281 11.414062 1.753906 11.5 1.769531 C 11.558594 1.78125 11.621094 1.792969 11.679688 1.804688 C 11.765625 1.824219 11.851562 1.84375 11.933594 1.863281 C 11.996094 1.878906 12.054688 1.894531 12.121094 1.914062 C 12.195312 1.933594 12.273438 1.957031 12.351562 1.980469 C 12.421875 2.003906 12.496094 2.023438 12.566406 2.046875 C 12.636719 2.074219 12.699219 2.089844 12.765625 2.117188 C 12.863281 2.152344 12.953125 2.1875 13.046875 2.222656 C 13.089844 2.238281 13.128906 2.257812 13.175781 2.273438 C 13.316406 2.335938 13.457031 2.394531 13.589844 2.460938 L 13.59375 2.460938 C 13.734375 2.53125 13.875 2.605469 14.015625 2.683594 C 14.105469 2.464844 14.238281 2.269531 14.402344 2.101562 L 14.925781 1.578125 C 14.132812 1.105469 13.273438 0.75 12.382812 0.515625 Z M 12.382812 0.515625 " } );
const path8 = el( 'path', { d: "M 12.15625 10.855469 C 12.460938 11.15625 12.550781 11.613281 12.386719 12.011719 C 12.21875 12.40625 11.832031 12.664062 11.402344 12.660156 C 11.121094 12.664062 10.851562 12.554688 10.65625 12.355469 L 10.144531 11.847656 C 10.066406 11.863281 9.984375 11.871094 9.902344 11.871094 C 9.820312 11.871094 9.738281 11.863281 9.65625 11.847656 L 9.152344 12.355469 C 8.738281 12.773438 8.0625 12.773438 7.648438 12.355469 C 7.234375 11.941406 7.234375 11.269531 7.648438 10.855469 L 8.160156 10.347656 C 8.144531 10.269531 8.136719 10.1875 8.132812 10.105469 C 8.136719 10.023438 8.144531 9.941406 8.160156 9.859375 L 3.707031 5.40625 C 3.394531 5.816406 3.121094 6.257812 2.894531 6.71875 L 2.894531 6.722656 C 2.835938 6.847656 2.78125 6.976562 2.726562 7.101562 C 2.707031 7.152344 2.683594 7.203125 2.667969 7.253906 C 2.636719 7.324219 2.609375 7.394531 2.582031 7.46875 C 2.554688 7.542969 2.53125 7.613281 2.507812 7.691406 C 2.488281 7.742188 2.476562 7.792969 2.457031 7.839844 C 2.433594 7.925781 2.410156 8.007812 2.386719 8.09375 C 2.375 8.136719 2.363281 8.179688 2.351562 8.222656 C 2.335938 8.285156 2.324219 8.347656 2.308594 8.40625 L 3 8.527344 C 3.1875 8.550781 3.320312 8.722656 3.304688 8.910156 C 3.285156 9.097656 3.125 9.238281 2.933594 9.230469 C 2.914062 9.230469 2.894531 9.226562 2.875 9.222656 L 2.1875 9.105469 C 2.183594 9.164062 2.171875 9.21875 2.164062 9.28125 C 2.15625 9.351562 2.152344 9.421875 2.148438 9.496094 C 2.144531 9.558594 2.136719 9.625 2.132812 9.6875 C 2.125 9.824219 2.121094 9.964844 2.121094 10.105469 C 2.121094 10.4375 2.144531 10.773438 2.1875 11.105469 L 2.875 10.984375 C 3.066406 10.949219 3.25 11.078125 3.285156 11.269531 C 3.320312 11.464844 3.191406 11.648438 3 11.679688 L 2.308594 11.800781 C 2.457031 12.457031 2.6875 13.089844 2.996094 13.683594 L 3.601562 13.332031 C 3.769531 13.234375 3.988281 13.292969 4.085938 13.464844 C 4.183594 13.632812 4.125 13.851562 3.953125 13.949219 L 3.351562 14.296875 C 3.714844 14.859375 4.144531 15.375 4.640625 15.828125 L 5.085938 15.296875 C 5.164062 15.1875 5.292969 15.132812 5.425781 15.152344 C 5.554688 15.171875 5.664062 15.265625 5.707031 15.390625 C 5.75 15.515625 5.71875 15.652344 5.625 15.75 L 5.179688 16.28125 C 5.710938 16.691406 6.292969 17.027344 6.910156 17.285156 L 7.152344 16.628906 C 7.21875 16.445312 7.421875 16.351562 7.605469 16.417969 C 7.789062 16.484375 7.882812 16.6875 7.816406 16.871094 L 7.574219 17.527344 C 8.214844 17.730469 8.878906 17.847656 9.546875 17.875 L 9.546875 17.175781 C 9.546875 16.980469 9.707031 16.824219 9.902344 16.824219 C 10.097656 16.824219 10.253906 16.980469 10.253906 17.175781 L 10.253906 17.875 C 10.925781 17.847656 11.589844 17.730469 12.230469 17.527344 L 11.988281 16.871094 C 11.921875 16.6875 12.015625 16.484375 12.199219 16.417969 C 12.382812 16.351562 12.585938 16.445312 12.652344 16.628906 L 12.894531 17.285156 C 13.511719 17.027344 14.089844 16.691406 14.625 16.28125 L 14.175781 15.75 C 14.085938 15.652344 14.054688 15.515625 14.097656 15.390625 C 14.140625 15.265625 14.25 15.171875 14.378906 15.152344 C 14.511719 15.132812 14.640625 15.1875 14.71875 15.296875 L 15.164062 15.828125 C 15.65625 15.375 16.089844 14.859375 16.453125 14.296875 L 15.851562 13.949219 C 15.738281 13.886719 15.671875 13.769531 15.671875 13.640625 C 15.671875 13.515625 15.738281 13.398438 15.847656 13.332031 C 15.957031 13.269531 16.09375 13.269531 16.203125 13.332031 L 16.808594 13.683594 C 17.117188 13.089844 17.347656 12.457031 17.496094 11.800781 L 16.804688 11.679688 C 16.679688 11.660156 16.578125 11.574219 16.535156 11.453125 C 16.492188 11.335938 16.515625 11.203125 16.597656 11.105469 C 16.675781 11.007812 16.804688 10.960938 16.929688 10.984375 L 17.613281 11.105469 C 17.660156 10.773438 17.679688 10.4375 17.683594 10.105469 C 17.683594 9.964844 17.679688 9.824219 17.671875 9.6875 C 17.667969 9.625 17.660156 9.566406 17.65625 9.511719 C 17.648438 9.433594 17.648438 9.355469 17.636719 9.277344 C 17.632812 9.214844 17.621094 9.160156 17.613281 9.105469 L 16.929688 9.222656 C 16.910156 9.226562 16.890625 9.230469 16.867188 9.230469 C 16.679688 9.238281 16.515625 9.097656 16.5 8.910156 C 16.484375 8.722656 16.617188 8.550781 16.804688 8.527344 L 17.496094 8.40625 C 17.480469 8.355469 17.46875 8.300781 17.457031 8.246094 C 17.441406 8.1875 17.425781 8.128906 17.410156 8.070312 C 17.390625 8 17.371094 7.929688 17.347656 7.859375 C 17.328125 7.789062 17.308594 7.726562 17.285156 7.660156 C 17.269531 7.601562 17.246094 7.539062 17.226562 7.480469 C 17.195312 7.390625 17.160156 7.304688 17.125 7.21875 C 17.109375 7.179688 17.09375 7.144531 17.082031 7.105469 C 17.027344 6.976562 16.96875 6.847656 16.90625 6.722656 C 16.804688 6.515625 16.695312 6.308594 16.578125 6.117188 C 16.433594 5.871094 16.269531 5.632812 16.097656 5.40625 L 11.644531 9.859375 C 11.660156 9.941406 11.667969 10.023438 11.671875 10.105469 C 11.667969 10.1875 11.660156 10.269531 11.644531 10.347656 Z M 12.15625 10.855469 " } );
const path9 = el( 'path', { d: "M 8.152344 11.355469 C 8.050781 11.441406 8.007812 11.578125 8.039062 11.707031 C 8.070312 11.835938 8.167969 11.9375 8.296875 11.96875 C 8.429688 12 8.5625 11.957031 8.648438 11.855469 L 8.929688 11.578125 C 8.730469 11.445312 8.558594 11.277344 8.425781 11.078125 Z M 8.152344 11.355469 " } );
const path10 = el( 'path', { d: "M 19.402344 2.101562 L 16.902344 4.601562 C 16.765625 4.738281 16.539062 4.738281 16.402344 4.601562 L 16.15625 4.351562 L 18.902344 1.601562 C 18.996094 1.511719 19.03125 1.382812 19 1.257812 C 18.96875 1.132812 18.871094 1.039062 18.746094 1.003906 C 18.625 0.972656 18.492188 1.011719 18.402344 1.101562 L 15.652344 3.851562 L 15.402344 3.601562 C 15.335938 3.535156 15.296875 3.445312 15.296875 3.351562 C 15.296875 3.257812 15.335938 3.167969 15.402344 3.101562 L 17.902344 0.601562 C 18.042969 0.464844 18.042969 0.242188 17.902344 0.101562 C 17.765625 -0.0351562 17.539062 -0.0351562 17.402344 0.101562 L 14.902344 2.605469 C 14.871094 2.636719 14.839844 2.671875 14.8125 2.707031 C 14.785156 2.742188 14.761719 2.777344 14.738281 2.820312 C 14.695312 2.894531 14.65625 2.976562 14.632812 3.058594 C 14.605469 3.15625 14.589844 3.253906 14.589844 3.351562 C 14.59375 3.632812 14.703125 3.902344 14.902344 4.101562 L 15.402344 4.605469 L 15.902344 5.105469 C 16.101562 5.300781 16.371094 5.410156 16.652344 5.410156 C 16.753906 5.410156 16.851562 5.398438 16.945312 5.371094 C 16.980469 5.363281 17.015625 5.347656 17.050781 5.332031 C 17.058594 5.332031 17.0625 5.332031 17.066406 5.328125 C 17.105469 5.308594 17.148438 5.289062 17.1875 5.265625 C 17.21875 5.25 17.25 5.226562 17.28125 5.207031 C 17.324219 5.175781 17.363281 5.140625 17.402344 5.105469 L 18.039062 4.472656 L 19.902344 2.605469 C 20.039062 2.464844 20.039062 2.242188 19.902344 2.101562 C 19.765625 1.964844 19.542969 1.964844 19.402344 2.101562 Z M 19.402344 2.101562 " } );
const path11 = el( 'path', { d: "M 1.148438 1.351562 C 0.460938 2.042969 1.074219 3.773438 1.8125 4.515625 C 2.503906 5.253906 3.660156 5.292969 4.402344 4.601562 C 5.089844 3.863281 5.050781 2.707031 4.3125 2.015625 C 3.570312 1.273438 1.839844 0.664062 1.148438 1.351562 Z M 1.148438 1.351562 " } );
const svgIcon = el( SVG, { width: 20, height: 20, viewBox: '0 0 20 20'}, path1, path2, path3, path4, path5, path6, path7, path8, path9, path10, path11 );

const deprecatedAttr = {
    title: {
        type: 'array',
        selector: '.details-title',
        source: 'children',
        default: __( "Details", "wpzoom-recipe-card" )
    },
    id: {
        type: 'string',
    },
    details: {
        type: 'array',
        selector: '.details-items',
        default: [
            { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'food', label: __( "Servings", "wpzoom-recipe-card" ) },
            { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'room-service', label: __( "Prep time", "wpzoom-recipe-card" ) },
            { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'cook', label: __( "Cooking time", "wpzoom-recipe-card" ) },
            { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'shopping-basket', label: __( "Calories", "wpzoom-recipe-card" ) },
        ]
    },
    columns: {
        type: 'number',
        default: 4
    },
    toInsert: {
        type: 'string',
    },
    showModal: {
        type: 'string',
        default: false
    },
    activeIconSet: {
        type: 'string',
        default: 'oldicon'
    },
    searchIcon: {
        type: 'string',
        default: ''
    },
    icons: {
        type: 'object',
        default: Icons
    },
    jsonTitle: {
        type: "string",
    },
    course: {
        type: 'array',
    },
    cuisine: {
        type: 'array',
    },
    keywords: {
        type: 'array',
    },
    blocks_count: {
        type: 'string'
    }
}

/**
 * Register: Details Gutenberg Block.
 *
 * Registers a new block provided a unique name and an object defining its
 * behavior. Once registered, the block is made editor as an option to any
 * editor interface where blocks are implemented.
 *
 * @link https://wordpress.org/gutenberg/handbook/block-api/
 * @param  {string}   name     Block name.
 * @param  {Object}   settings Block settings.
 * @return {?WPBlock}          The block, if it has been successfully
 *                             registered; otherwise `undefined`.
 */

registerBlockType( 'wpzoom-recipe-card/block-details', {
    // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.
    title: __( "Details", "wpzoom-recipe-card" ), // Block title.
    icon: {
        // // Specifying a background color to appear with the icon e.g.: in the inserter.
        // background: '#2EA55F',
        // Specifying a color for the icon (optional: if not set, a readable color will be automatically defined)
        foreground: '#2EA55F',
        // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.
        src: svgIcon,
    },
    category: 'wpzoom-recipe-card', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.
    // Allow multiple Details block per post.
    supports: {
        multiple: false,
    },
    keywords: [
        __( "details", "wpzoom-recipe-card" ),
        __( "wpzoom", "wpzoom-recipe-card" ),
        __( "recipe", "wpzoom-recipe-card" ),
    ],

    /**
     * The edit function describes the structure of your block in the context of the editor.
     * This represents what the editor will render when the block is used.
     *
     * The "edit" property must be a valid function.
     *
     * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/
     */

    edit: ( { attributes, setAttributes, className } ) => {
        // Because setAttributes is quite slow right after a block has been added we fake having a single detail.
        if ( ! attributes.details || attributes.details.length === 0 ) {
            attributes.details = [
                { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'food', label: __( "Servings", "wpzoom-recipe-card" ) },
                { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'room-service', label: __( "Prep time", "wpzoom-recipe-card" ) },
                { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'cook', label: __( "Cooking time", "wpzoom-recipe-card" ) },
                { id: Detail.generateId( "detail-item" ), iconSet: 'oldicon', icon: 'shopping-basket', label: __( "Calories", "wpzoom-recipe-card" ) }
            ];
        }

        return <Detail { ...{ attributes, setAttributes, className } } />;
    },

    save() {
        // Rendering in PHP
        return null;
    },

    deprecated: [
        {
            attributes: deprecatedAttr,
            save: legacy.v1_0,
        },
    ],

} );
